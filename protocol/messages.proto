// Copyright (c) 2017 Sourced Technologies S.L.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
syntax = "proto3";
package github.com.bblfsh.sdk.protocol;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "github.com/bblfsh/sdk/uast/generated.proto";

option go_package = "protocol";

message ParseASTRequest {
	option (gogoproto.typedecl) = false;
	string content = 1;
}

message ParseASTResponse {
	option (gogoproto.typedecl) = false;
	string status = 1 [(gogoproto.casttype) = "Status"];
	repeated string errors = 2;
	github.com.bblfsh.sdk.uast.Node ast = 3 [(gogoproto.customname) = "AST"];
}

message ParseUASTRequest {
	option (gogoproto.typedecl) = false;
	string content = 1;
}

message ParseUASTResponse {
	option (gogoproto.typedecl) = false;
	string status = 1 [(gogoproto.casttype) = "Status"];
	repeated string errors = 2;
	github.com.bblfsh.sdk.uast.Node uast = 3 [(gogoproto.customname) = "UAST"];
}

